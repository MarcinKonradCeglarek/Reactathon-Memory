.wrapper{
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%
}

.FadeOut {
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: white;
    z-index: 300;
    animation: fadeout 1s ease-in;
    animation-fill-mode: both;
}

.gridContainer {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr;
    grid-row-gap: 2vmin;
    grid-column-gap: 2vmin;
}

.victoryButton, .hud{
    position: absolute;
    padding: 1vmin 3vmin;
    background: rgb(255,143,0);
    background: linear-gradient(141deg, rgba(255,143,0,1) 0%, rgba(243,252,69,1) 100%);
    color: red;
    display: flex;
    font-weight: bold;
    justify-content: center;
    font-family: 'Comic Sans MS';
    align-items: center;
    z-index: 200;
    border: 1vmin solid white;
    border-radius: 2vmin;
    text-shadow: 0.1vmin 0.1vmin 0.2vmin rgba(0, 0, 0, 0.6);
    box-shadow: 1vmin 1vmin 1vmin rgba(0, 0, 0, 0.4);
}

.hud {
    top: 3vmin;
    right: 3vmin;
    font-size: 4vmin;
}

.victoryButton {
    cursor: pointer;
    top: 75% ;
    left: 50%;
    translate: -50% -50%;
    font-size: 6vmin;
    transition: transform 0.2s ease-in-out;
}

.victoryButton:hover {
    transform: scale(1.5);
    box-shadow: 1.5vmin 1.5vmin 1.5vmin rgba(0, 0, 0, 0.4);
}

/* The flip card container - set the width and height to whatever you want. We have added the border property to demonstrate that the flip itself goes out of the box on hover (remove perspective if you don't want the 3D effect */
.flip-card {
    background-color: transparent;
    width: 20vmin;
    height: 20vmin;
    perspective: 1000px; /* Remove this if you don't want the 3D effect */
    z-index: 100;
}
  
/* This container is needed to position the front and back side */
.flip-card-inner {
    position: relative;
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.4s;
    transform-style: preserve-3d;
    transform: rotateY(180deg);
}
  
/* Do an horizontal flip when you move the mouse over the flip box container */
.flip-card:hover:not(.flipped):not(.guessed) .flip-card-inner {
    transform: scale(1.1) rotateY(180deg);
}

.flip-card.flipped .flip-card-inner {
    transform: rotateY(0deg);
}

.flip-card.guessed .flip-card-inner {
    transform: scale(0.9) rotateY(0deg);
    opacity: 0.7;
}
  
/* Position the front and back side */
.flip-card-front, .flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 11vmin;
    border: 1vmin solid white;
    border-radius: 2vmin;
    box-shadow: 1vmin 1vmin 1vmin rgba(0, 0, 0, 0.46);
    box-sizing: border-box
}
  
.flip-card-front {
    color: black;
    background: rgb(53,0,255);
    background: radial-gradient(circle, rgba(252,69,222,1) 0%, rgba(53,0,255,1) 100%);
    transform: rotateY(180deg);
}
  
.flip-card-back {
    background: rgb(255,143,0);
    background: radial-gradient(circle, rgba(255,143,0,1) 0%, rgba(243,252,69,1) 100%);
}

.feedback {
    position: absolute;
    top: 60%;
    left: 50%;
    translate: -50% -50%;
    font-size: 10vmin;
    transition: 400ms;
    animation: jump .4s alternate 2 ease-in-out;
    animation-fill-mode: forwards;
}

.win {
    z-index: 120;
    animation: bounce 1.5s alternate infinite ease-in-out;
}

@keyframes jump {
    from{transform: rotate(-20deg); opacity: 0;}
    to{transform: rotate(20deg) scale(6);  opacity: 1; }
}

@keyframes bounce {
    from{transform: rotate(-20deg); }
    to{transform: rotate(20deg) scale(6); }
}

@keyframes fadeout {
  from{opacity: 1 }
  to{opacity: 0}
}
